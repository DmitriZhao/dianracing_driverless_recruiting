填空题
1. cin, ifstream, istringstream, cout, ofstream, ostringstream
2. 跳出整个循环， 跳过这一次迭代
3. 1 2 4 8 8 4 8
4. 传值, 传指针, 传引用
5. public, protected, private


简答题
1. 面向对象编程就是在编程的过程中维护“对象”，通过“对象”来实现程序的功能。每一个对象都类似于一个小机器，能够完成一定的功能。对象是对现实世界的抽象，因此写出的代码易于理解、可读性更强；面向对象的信息隐藏和封装机制降低了犯错的几率；对象之间低耦合、高内聚，使得代码更易于维护和扩展；对象的继承和多态提高了代码的可重用性。

2. 定义：即定义性声明，在告诉编译器变量类型的同时，为其分配内存
   声明：即引用性声明，只是告诉编译器有这样一个变量，并不为其分配内存，变量在其他地方定义
   初始化：给变量赋初值，（变量必须分配了内存空间）

3. char* :指向char类型变量的指针变量类型(这个变量可能是一个C-style字符串的第一个字符，也可能是第n个，也可能只是一个单独的char)
   char[]:元素是char的数组，C-style字符串
   string:C++的字符串类
   char* a="abc"; a="def";	//合法，a指向"def"在常量存储区的地址
   char a[4]="abc"; a="def";	//不合法，a是常量，只能通过下标访问a的元素
   //char* 和 char[] 在函数参数中等价

4. "."的左边是对象，“->”的左边是指向对象的指针。
	Person a;
	Person *b = &a;
	std::cout << a.name << b->name << (*b).name;
